{"ast":null,"code":"var _jsxFileName = \"/Users/markd/projects/js/projector/js/pages/members/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport NextLink from \"next/link\";\nimport client from \"../../lib/apollo-client\";\nimport { GET_MEMBERS, ONE_MEMBER_QUERY } from \"../../lib/queries\";\nimport Layout from \"../../components/layout\";\nimport { Box, Link, Heading, List, ListItem, Progress } from \"@chakra-ui/core\";\nexport default function Member({\n  memberData\n}) {\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    color: \"orange.500\",\n    fontWeight: \"semibold\",\n    letterSpacing: \"wide\",\n    fontSize: \"xl\",\n    textTransform: \"uppercase\" // ml=\"2\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, memberData.full_name), __jsx(Heading, {\n    as: \"h2\",\n    size: \"1xl\",\n    marginY: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Projects\"), __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, memberData.user_projects.map(project => __jsx(ListItem, {\n    key: project.project.code,\n    marginY: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, __jsx(NextLink, {\n    href: \"/projects/[id]\",\n    as: \"/projects/\" + project.project.code,\n    passHref: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    color: \"teal.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, \" \", project.project.name))))));\n} // TODO: fallback to render page, incremental (vercel)\n\nexport async function getStaticPaths() {\n  // Return a list of possible value for id\n  const membersQuery = await client.query({\n    query: GET_MEMBERS\n  });\n  const paths = membersQuery.data.members.map(member => ({\n    params: {\n      id: member.id.toString()\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  // Fetch necessary data for the blog post using params.id\n  const member = await client.query({\n    query: ONE_MEMBER_QUERY,\n    variables: {\n      id: params.id\n    }\n  });\n  const memberData = member.data.members[0];\n  return {\n    props: {\n      memberData\n    },\n    revalidate: 60\n  };\n}","map":{"version":3,"sources":["/Users/markd/projects/js/projector/js/pages/members/[id].js"],"names":["Head","NextLink","client","GET_MEMBERS","ONE_MEMBER_QUERY","Layout","Box","Link","Heading","List","ListItem","Progress","Member","memberData","full_name","user_projects","map","project","code","name","getStaticPaths","membersQuery","query","paths","data","members","member","params","id","toString","fallback","getStaticProps","variables","props","revalidate"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,mBAA9C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,QAAnC,EAA6CC,QAA7C,QAA6D,iBAA7D;AAEA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAAgC;AAC7C,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,UAAU,EAAC,UAFb;AAGE,IAAA,aAAa,EAAC,MAHhB;AAIE,IAAA,QAAQ,EAAC,IAJX;AAKE,IAAA,aAAa,EAAC,WALhB,CAME;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGA,UAAU,CAACC,SARd,CADF,EAYE,MAAC,OAAD;AAAS,IAAA,EAAE,EAAC,IAAZ;AAAiB,IAAA,IAAI,EAAC,KAAtB;AAA4B,IAAA,OAAO,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,EAeE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,UAAU,CAACE,aAAX,CAAyBC,GAAzB,CAA8BC,OAAD,IAC5B,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,OAAO,CAACA,OAAR,CAAgBC,IAA/B;AAAqC,IAAA,OAAO,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,IAAI,EAAC,gBADP;AAEE,IAAA,EAAE,EAAE,eAAeD,OAAO,CAACA,OAAR,CAAgBC,IAFrC;AAGE,IAAA,QAAQ,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAyBD,OAAO,CAACA,OAAR,CAAgBE,IAAzC,CALF,CADF,CADD,CADH,CAfF,CADF;AA+BD,C,CAED;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,YAAY,GAAG,MAAMnB,MAAM,CAACoB,KAAP,CAAa;AACtCA,IAAAA,KAAK,EAAEnB;AAD+B,GAAb,CAA3B;AAIA,QAAMoB,KAAK,GAAGF,YAAY,CAACG,IAAb,CAAkBC,OAAlB,CAA0BT,GAA1B,CAA+BU,MAAD,KAAa;AACvDC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,EAAE,EAAEF,MAAM,CAACE,EAAP,CAAUC,QAAV;AAAN;AAD+C,GAAb,CAA9B,CAAd;AAIA,SAAO;AACLN,IAAAA,KADK;AAELO,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEJ,EAAAA;AAAF,CAA9B,EAA0C;AAC/C;AACA,QAAMD,MAAM,GAAG,MAAMxB,MAAM,CAACoB,KAAP,CAAa;AAChCA,IAAAA,KAAK,EAAElB,gBADyB;AAEhC4B,IAAAA,SAAS,EAAE;AAAEJ,MAAAA,EAAE,EAAED,MAAM,CAACC;AAAb;AAFqB,GAAb,CAArB;AAKA,QAAMf,UAAU,GAAGa,MAAM,CAACF,IAAP,CAAYC,OAAZ,CAAoB,CAApB,CAAnB;AAEA,SAAO;AACLQ,IAAAA,KAAK,EAAE;AACLpB,MAAAA;AADK,KADF;AAILqB,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD","sourcesContent":["import Head from \"next/head\";\nimport NextLink from \"next/link\";\nimport client from \"../../lib/apollo-client\";\nimport { GET_MEMBERS, ONE_MEMBER_QUERY } from \"../../lib/queries\";\nimport Layout from \"../../components/layout\";\nimport { Box, Link, Heading, List, ListItem, Progress } from \"@chakra-ui/core\";\n\nexport default function Member({ memberData }) {\n  return (\n    <Layout>\n      <Box\n        color=\"orange.500\"\n        fontWeight=\"semibold\"\n        letterSpacing=\"wide\"\n        fontSize=\"xl\"\n        textTransform=\"uppercase\"\n        // ml=\"2\"\n      >\n        {memberData.full_name}\n      </Box>\n\n      <Heading as=\"h2\" size=\"1xl\" marginY=\"1rem\">\n        Projects\n      </Heading>\n      <List>\n        {memberData.user_projects.map((project) => (\n          <ListItem key={project.project.code} marginY=\"1rem\">\n            <NextLink\n              href=\"/projects/[id]\"\n              as={\"/projects/\" + project.project.code}\n              passHref\n            >\n              <Link color=\"teal.500\"> {project.project.name}</Link>\n            </NextLink>\n          </ListItem>\n        ))}\n      </List>\n    </Layout>\n  );\n}\n\n// TODO: fallback to render page, incremental (vercel)\nexport async function getStaticPaths() {\n  // Return a list of possible value for id\n  const membersQuery = await client.query({\n    query: GET_MEMBERS,\n  });\n\n  const paths = membersQuery.data.members.map((member) => ({\n    params: { id: member.id.toString() },\n  }));\n\n  return {\n    paths,\n    fallback: false,\n  };\n}\n\nexport async function getStaticProps({ params }) {\n  // Fetch necessary data for the blog post using params.id\n  const member = await client.query({\n    query: ONE_MEMBER_QUERY,\n    variables: { id: params.id },\n  });\n\n  const memberData = member.data.members[0];\n\n  return {\n    props: {\n      memberData,\n    },\n    revalidate: 60,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}